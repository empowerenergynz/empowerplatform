AWSTemplateFormatVersion: "2010-09-09"
Description: "Create networking for empower-energy"
Parameters:
  ProjectEnvironment:
    Type: "String"
    Default: "test"
    Description: "Environment for project"
    AllowedValues: [ "production", "stage", "test" ]

  CertificateArn:
    Type: "String"
    Default: "ACM-ARN"
    Description: "ACM SSL Certificate ARN"

Resources:
  #VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} VPC"

  SubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: "10.0.1.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} SubnetA"

  SubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}b"
      CidrBlock: "10.0.2.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} SubnetB"

  SubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: "10.0.3.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} SubnetC"

  PrivateSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: "10.0.4.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} PrivateSubnetA"

  PrivateSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}b"
      CidrBlock: "10.0.5.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} PrivateSubnetB"

  PrivateSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: "10.0.6.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectEnvironment} PrivateSubnetC"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "VPCGatewayAttachment"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  SubnetARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SubnetA

  SubnetBRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SubnetB

  SubnetCRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SubnetC

  VPCDefaultSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Default VPC security group"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: "10.0.0.0/16"
          IpProtocol: "-1"
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  #ALB defaults
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "ALB Security Group"
      GroupName: !Sub "empower-energy-${ProjectEnvironment}-ALB-SG"
      VpcId: !Ref VPC

      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          Description: ""
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIpv6: "::/0"
          Description: ""
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          Description: ""
          FromPort: 443
          IpProtocol: "tcp"
          ToPort: 443
        - CidrIpv6: "::/0"
          Description: ""
          FromPort: 443
          IpProtocol: "tcp"
          ToPort: 443
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  ElasticLoadBalancingV2LoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub "empower-energy-${ProjectEnvironment}"
      Scheme: "internet-facing"
      Type: "application"
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB
        - !Ref SubnetC
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      IpAddressType: "ipv4"
      LoadBalancerAttributes:
        - Key: "access_logs.s3.enabled"
          Value: "false"
        - Key: "idle_timeout.timeout_seconds"
          Value: "60"
        - Key: "deletion_protection.enabled"
          Value: "false"
        - Key: "routing.http2.enabled"
          Value: "true"
        - Key: "routing.http.drop_invalid_header_fields.enabled"
          Value: "false"

  ElasticLoadBalancingV2ListenerHTTP:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
      Port: 80
      Protocol: "HTTP"
      DefaultActions:
        - Order: 1
          RedirectConfig:
            Protocol: "HTTPS"
            Port: "443"
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"
          Type: "redirect"

  ## Listeners
  ElasticLoadBalancingV2ListenerHTTPSECS:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
      Port: 443
      Protocol: "HTTPS"
      SslPolicy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - Order: 1
          Type: "fixed-response"
          FixedResponseConfig:
            StatusCode: 204

Outputs:
  ECSListenerHTTPS:
    Description: "ECS ALB HTTPS Listener Resource"
    Value: !Ref ElasticLoadBalancingV2ListenerHTTPSECS
    Export:
      Name: "empower-energy-HTTPS-Listener"
